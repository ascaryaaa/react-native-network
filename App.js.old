import React, { useState, useEffect } from "react";
import { ActivityIndicator, Button, FlatList, StyleSheet, Text, View } from "react-native";
import axios from "axios";
import Auth from './Auth';

export default function App() {
  const [user, setUser] = useState();
  const [loading, setLoading] = useState(false);
  const [customers, setCustomers] = useState([]);

  useEffect(() => {
    getAllCustomers();
  }, []);

  const getAccountAxios = () => {
    axios.get('https://private-anon-75f39ba77b-itodpbni.apiary-mock.com/account')
    .then(response => {
      console.log("Response", response.data)
      setUser(response.data)
    })
    .catch(error => console.error("Error", error))
    .finally(()=> setLoading(false))
  }

  function getAccount() {
    setLoading(true);
    fetch("https://private-anon-75f39ba77b-itodpbni.apiary-mock.com/account")
      .then((response) => {
        if (!response.ok) {
          throw new Error("Response was not ok!");
        } else {
          return response.json();
        }
      })
      .then((response) => {
        setUser(response);
      })
      .catch((error) => {
        console.error("error", error);
      })
      .finally(() => {
        setLoading(false);
      });
  }

  function getAllCustomers() {
    fetch("https://private-anon-91cc841bc2-itodpbni.apiary-mock.com/customers")
      .then((response) => response.json())
      .then((data) => {
        setCustomers(data.customers);
      })
      .catch((error) => {
        console.error("Error fetching customers:", error);
      });
  }

  return (
    <View style={styles.container}>
      <Button disabled={loading} onPress={getAccount} title="Click" />
      <Button disabled={loading} onPress={getAccountAxios} title="Click" />
      {loading && <ActivityIndicator size="large" animating={loading} />}
      <Text>Name: {user?.user.name}</Text>
      <Text>Phone Number: {user?.user.phone}</Text>
      <Text>Balance: {user?.user.balance && user.user.balance}</Text>
      <Text>List of Customers:</Text>
      <FlatList
        data={customers}
        renderItem={({ item }) => (
          <View>
            <Text>Name: {item.name}</Text>
            <Text>Amount: {item.amount}</Text>
            <Text>Notes: {item.notes}</Text>
          </View>
        )}
        keyExtractor={(item) => item.name}
      />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#fff",
    alignItems: "center",
    justifyContent: "center",
    paddingTop: 50,
  },
});